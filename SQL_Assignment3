--1. List all cities that have both Employees and Customers.
SELECT DISTINCT c.City
FROM Customers c
JOIN Employees e ON c.City = e.City;

--2a List all cities that have Customers but no Employee using subquery  
SELECT DISTINCT c.City
FROM Customers c
WHERE c.City NOT IN (SELECT DISTINCT e.City FROM Employees e)
ORDER BY c.City;

--2b List all cities that have Customers but no Employee without using subquery  
SELECT DISTINCT c.City
FROM Customers c
LEFT JOIN Employees e ON c.City = e.City
WHERE e.City IS NULL
ORDER BY c.City;

--3. List all products and their total order quantities throughout all orders.
SELECT p.ProductName, SUM(od.Quantity) AS TotalQuantityOrdered
FROM Products p
JOIN [Order Details] od ON p.ProductID = od.ProductID
GROUP BY p.ProductName
ORDER BY TotalQuantityOrdered DESC;

--4.  List all Customer Cities and total products ordered by that city.
SELECT c.City, SUM(od.Quantity) AS TotalProductsOrdered
FROM Customers c
JOIN Orders o ON c.CustomerID = o.CustomerID
JOIN [Order Details] od ON o.OrderID = od.OrderID
GROUP BY c.City
ORDER BY TotalProductsOrdered DESC;

--5. List all Customer Cities that have at least two customers.
SELECT City, COUNT(CustomerID) AS NumberOfCustomers
FROM Customers
GROUP BY City
HAVING COUNT(CustomerID) >= 2;

--6. List all Customer Cities that have ordered at least two different kinds of products.
SELECT c.City
FROM Customers c
JOIN Orders o ON c.CustomerID = o.CustomerID
JOIN [Order Details] od ON o.OrderID = od.OrderID
GROUP BY c.City
HAVING COUNT(DISTINCT od.ProductID) >= 2
ORDER BY c.City;

--7. List all Customers who have ordered products, but have the ‘ship city’ on the order different from their own customer cities.
SELECT DISTINCT c.CustomerID, c.CompanyName, c.City AS CustomerCity, o.ShipCity
FROM Customers c
JOIN Orders o ON c.CustomerID = o.CustomerID
WHERE c.City <> o.ShipCity

--8. List 5 most popular products, their average price, and the customer city that ordered most quantity of it.
WITH ProductPopularity AS (
    SELECT TOP 5 od.ProductID, p.ProductName, SUM(od.Quantity) AS TotalOrdered, AVG(od.UnitPrice) AS AvgPrice
    FROM [Order Details] od
    JOIN Products p ON od.ProductID = p.ProductID
    GROUP BY od.ProductID, p.ProductName
    ORDER BY TotalOrdered DESC
),
CityMaxOrder AS (
    SELECT od.ProductID, c.City, SUM(od.Quantity) AS TotalOrdered
    FROM Orders o
    JOIN Customers c ON o.CustomerID = c.CustomerID
    JOIN [Order Details] od ON o.OrderID = od.OrderID
    GROUP BY od.ProductID, c.City
)
SELECT pp.ProductName, pp.AvgPrice, cmo.City AS TopOrderingCity
FROM ProductPopularity pp
JOIN CityMaxOrder cmo ON pp.ProductID = cmo.ProductID
WHERE cmo.TotalOrdered = (
    SELECT MAX(TotalOrdered)
    FROM CityMaxOrder cm
    WHERE cm.ProductID = cmo.ProductID
)
ORDER BY pp.TotalOrdered DESC;

--9a List all cities that have never ordered something but we have employees there using subarray
SELECT DISTINCT e.City
FROM Employees e
WHERE e.City NOT IN (SELECT DISTINCT o.ShipCity FROM Orders o)
ORDER BY e.City;

--9b List all cities that have never ordered something but we have employees there without using subarray
SELECT DISTINCT e.City
FROM Employees e
LEFT JOIN Orders o ON e.City = o.ShipCity
WHERE o.ShipCity IS NULL
ORDER BY e.City;

--10. List one city, if exists, that is the city from where the employee sold most orders (not the product quantity) is, and also the city of most total quantity of products ordered from. 
SELECT eoc.EmployeeCity AS MatchingCity
FROM 
    (SELECT TOP 1 e.City AS EmployeeCity, COUNT(o.OrderID) AS TotalOrders
     FROM Employees e
     JOIN Orders o ON e.EmployeeID = o.EmployeeID
     GROUP BY e.City
     ORDER BY TotalOrders DESC) eoc
JOIN 
    (SELECT TOP 1 c.City AS CustomerCity, SUM(od.Quantity) AS TotalQuantityOrdered
     FROM Customers c
     JOIN Orders o ON c.CustomerID = o.CustomerID
     JOIN [Order Details] od ON o.OrderID = od.OrderID
     GROUP BY c.City
     ORDER BY TotalQuantityOrdered DESC) poc
ON eoc.EmployeeCity = poc.CustomerCity;

--11.  How do you remove the duplicates record of a table?
--Using DISTINCT
SELECT DISTINCT * FROM TableName;
